// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: brands.sql

package db

import (
	"context"
)

const createBrand = `-- name: CreateBrand :one
INSERT INTO brands (
    brand_name
) VALUES (
    $1
) RETURNING id, brand_name
`

func (q *Queries) CreateBrand(ctx context.Context, brandName string) (*Brands, error) {
	row := q.db.QueryRow(ctx, createBrand, brandName)
	var i Brands
	err := row.Scan(&i.ID, &i.BrandName)
	return &i, err
}

const listbrands = `-- name: Listbrands :many
SELECT id, brand_name FROM brands
ORDER BY id
`

func (q *Queries) Listbrands(ctx context.Context) ([]*Brands, error) {
	rows, err := q.db.Query(ctx, listbrands)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []*Brands{}
	for rows.Next() {
		var i Brands
		if err := rows.Scan(&i.ID, &i.BrandName); err != nil {
			return nil, err
		}
		items = append(items, &i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
